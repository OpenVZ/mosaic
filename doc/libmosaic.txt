The API is described in include/uapi/mosaic.h

* mosaic_t -- a handle for mosaic object

* volume_t -- a handle for volume object


* mosaic_t mosaic_open(const char *name, int open_flags)
  void mosaic_close(mosaic_t m)

  Open and close the mosaic handle.

  @name is mosaic name, that is treated as described below:
  
  If the name starts with . or / it's treated as a path to
  config file and is just opened. Otherwise the $name.mos
  config file is looked up in the default config directory
  (/etc/mosaic.d).


* volume_t mosaic_open_vol(mosaic_t m, char *name, int open_flags)
  void mosaic_close_vol(volume_t)

  Open and close volume handle.


* int mosaic_mount(mosaic_t m, char *path, int mount_flags)
  int mosaic_mount_vol(volume_t t, char *path, int mount_flags);
  int mosaic_umount_vol(volume_t t, char *path, int umount_flags);

  Mount metadata or volume into @path location with @mount_flags
  flags.


* int mosaic_make_vol(mosaic_t m, char *name, unsigned long size_in_blocks, int make_flags)
  int mosaic_make_vol_fs(mosaic_t m, char *name, unsigned long size_in_blocks, int make_flags)

  Makes new volume. The _fs routine also puts an empty filesystem
  (default_fs from config file) on it. The @size_in_blocks is
  the size of new volume in 512-bytes blocks.


* int mosaic_clone_vol(volume_t from, char *name, int clone_flags)

  Clones the volume @from in a COW-manner. If backend doesn't supports
  COW-ing then error is returned.


* int mosaic_drop_vol(volume_t t, int drop_flags)

  Removes volume and ALL DATA ON IT!


* int mosaic_resize_vol(volume_t t, unsigned long new_size_in_blocks, int resize_flags)

  Changes the size of a given volume.


* int mosaic_get_vol_bdev(volume_t t, char *dev, int len, int flags);
  int mosaic_put_vol_bdev(volume_t t, char *dev);

  Gets path to block device that can be opened. This call makes sure the
  device really exists and is ready to work, respectively the _put_ one
  stops/detaches the device.

  The device path is put in the @dev buffer of @len length and the real
  length of the path is returned.


* int mosaic_get_vol_size(volume_t t, unsigned long *size_in_blocks);

  Puts the size (in 512-bytes blocks) into the @size_in_blocks variable.
